{"ast":null,"code":"import { db } from '@/firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport twilio from 'twilio';\nexport default {\n  data() {\n    return {\n      nom: '',\n      numero: '',\n      heure: '',\n      personnes: ''\n    };\n  },\n  methods: {\n    submitReservation() {\n      addDoc(collection(db, 'reservations'), {\n        nom: this.nom,\n        numero: this.numero,\n        heure: this.heure,\n        personnes: this.personnes\n      }).then(docRef => {\n        // Succès de l'enregistrement, récupérez l'ID du document ajouté\n        const reservationId = docRef.id;\n\n        // Envoi du message texte à l'aide de Firebase Cloud Messaging\n        const message = `Nouvelle réservation - ID: ${reservationId}, Nom: ${this.nom}, Heure: ${this.heure}, Personnes: ${this.personnes}`;\n        this.sendSmsMessage('+33671783492', message); // Remplacez '+33671783492' par le numéro de téléphone du destinataire\n\n        // Réinitialisation des valeurs du formulaire\n        this.nom = '';\n        this.numero = '';\n        this.heure = '';\n        this.personnes = '';\n        console.log('Réservation enregistrée avec succès dans Firestore!');\n      }).catch(error => {\n        console.error('Erreur lors de l\\'enregistrement de la réservation:', error);\n      });\n    },\n    sendSmsMessage(phoneNumber, message) {\n      const accountSid = 'YOUR_TWILIO_ACCOUNT_SID';\n      const authToken = 'YOUR_TWILIO_AUTH_TOKEN';\n      const twilioPhoneNumber = 'YOUR_TWILIO_PHONE_NUMBER';\n      const client = twilio(accountSid, authToken);\n      client.messages.create({\n        body: message,\n        from: twilioPhoneNumber,\n        to: phoneNumber\n      }).then(message => console.log('Message sent:', message.sid)).catch(error => console.error('Failed to send message:', error));\n    }\n  }\n};","map":{"version":3,"names":["db","collection","addDoc","twilio","data","nom","numero","heure","personnes","methods","submitReservation","then","docRef","reservationId","id","message","sendSmsMessage","console","log","catch","error","phoneNumber","accountSid","authToken","twilioPhoneNumber","client","messages","create","body","from","to","sid"],"sources":["/home/emile/Documents/Epitech/3rd year/INTERNSHIP/tem/src/components/FormulaireReservation.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto\">\n    <h1 class=\"text-2xl font-bold mb-4\">Formulaire de réservation de table</h1>\n    <form @submit.prevent=\"submitReservation\">\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700 font-bold mb-2\" for=\"nom\">\n          Nom de la réservation :\n        </label>\n        <input v-model=\"nom\"\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"nom\" type=\"text\" placeholder=\"Entrez le nom de la réservation\" required />\n      </div>\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700 font-bold mb-2\" for=\"nom\">\n          Numéro de téléphone :\n        </label>\n        <input v-model=\"numero\"\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"number\" type=\"tel\" pattern=\"[0-9]{2}-[0-9]{2}-[0-9]{2}-[0-9]{2}-[0-9]{2}\"\n          placeholder=\"Exemple xx-xx-xx-xx-xx\" required />\n      </div>\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700 font-bold mb-2\" for=\"heure\">\n          Heure de réservation :\n        </label>\n        <input v-model=\"heure\"\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"heure\" type=\"text\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"Exemple xx:xx\" required />\n      </div>\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700 font-bold mb-2\" for=\"personnes\">\n          Nombre de personnes :\n        </label>\n        <input v-model=\"personnes\"\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"personnes\" type=\"number\" placeholder=\"Entrez le nombre de personnes\" required />\n      </div>\n      <div class=\"flex justify-center\">\n        <button type=\"submit\"\n          class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\n          Réserver\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n  \n<script>\nimport { db } from '@/firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport twilio from 'twilio';\n\nexport default {\n  data() {\n    return {\n      nom: '',\n      numero: '',\n      heure: '',\n      personnes: '',\n    };\n  },\n  methods: {\n    submitReservation() {\n      addDoc(collection(db, 'reservations'), {\n        nom: this.nom,\n        numero: this.numero,\n        heure: this.heure,\n        personnes: this.personnes,\n      })\n        .then((docRef) => {\n          // Succès de l'enregistrement, récupérez l'ID du document ajouté\n          const reservationId = docRef.id;\n\n          // Envoi du message texte à l'aide de Firebase Cloud Messaging\n          const message = `Nouvelle réservation - ID: ${reservationId}, Nom: ${this.nom}, Heure: ${this.heure}, Personnes: ${this.personnes}`;\n          this.sendSmsMessage('+33671783492', message); // Remplacez '+33671783492' par le numéro de téléphone du destinataire\n\n          // Réinitialisation des valeurs du formulaire\n          this.nom = '';\n          this.numero = '';\n          this.heure = '';\n          this.personnes = '';\n\n          console.log('Réservation enregistrée avec succès dans Firestore!');\n        })\n        .catch((error) => {\n          console.error('Erreur lors de l\\'enregistrement de la réservation:', error);\n        });\n    },\n    sendSmsMessage(phoneNumber, message) {\n  const accountSid = 'YOUR_TWILIO_ACCOUNT_SID';\n  const authToken = 'YOUR_TWILIO_AUTH_TOKEN';\n  const twilioPhoneNumber = 'YOUR_TWILIO_PHONE_NUMBER';\n\n  const client = twilio(accountSid, authToken);\n\n  client.messages\n    .create({\n      body: message,\n      from: twilioPhoneNumber,\n      to: phoneNumber\n    })\n    .then((message) => console.log('Message sent:', message.sid))\n    .catch((error) => console.error('Failed to send message:', error));\n}\n  },\n};\n</script>"],"mappings":"AAgDA,SAASA,EAAC,QAAS,YAAY;AAC/B,SAASC,UAAU,EAAEC,MAAK,QAAS,oBAAoB;AACvD,OAAOC,MAAK,MAAO,QAAQ;AAE3B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClBR,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,cAAc,CAAC,EAAE;QACrCK,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,SAAS,EAAE,IAAI,CAACA;MAClB,CAAC,EACEG,IAAI,CAAEC,MAAM,IAAK;QAChB;QACA,MAAMC,aAAY,GAAID,MAAM,CAACE,EAAE;;QAE/B;QACA,MAAMC,OAAM,GAAK,8BAA6BF,aAAc,UAAS,IAAI,CAACR,GAAI,YAAW,IAAI,CAACE,KAAM,gBAAe,IAAI,CAACC,SAAU,EAAC;QACnI,IAAI,CAACQ,cAAc,CAAC,cAAc,EAAED,OAAO,CAAC,EAAE;;QAE9C;QACA,IAAI,CAACV,GAAE,GAAI,EAAE;QACb,IAAI,CAACC,MAAK,GAAI,EAAE;QAChB,IAAI,CAACC,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,SAAQ,GAAI,EAAE;QAEnBS,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;MACpE,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC7E,CAAC,CAAC;IACN,CAAC;IACDJ,cAAcA,CAACK,WAAW,EAAEN,OAAO,EAAE;MACvC,MAAMO,UAAS,GAAI,yBAAyB;MAC5C,MAAMC,SAAQ,GAAI,wBAAwB;MAC1C,MAAMC,iBAAgB,GAAI,0BAA0B;MAEpD,MAAMC,MAAK,GAAItB,MAAM,CAACmB,UAAU,EAAEC,SAAS,CAAC;MAE5CE,MAAM,CAACC,QAAO,CACXC,MAAM,CAAC;QACNC,IAAI,EAAEb,OAAO;QACbc,IAAI,EAAEL,iBAAiB;QACvBM,EAAE,EAAET;MACN,CAAC,EACAV,IAAI,CAAEI,OAAO,IAAKE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,OAAO,CAACgB,GAAG,CAAC,EAC3DZ,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IACtE;EACE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}